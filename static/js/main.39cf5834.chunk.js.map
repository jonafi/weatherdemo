{"version":3,"sources":["utils/API.js","pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Main","loadDefaultData","API","then","res","console","log","data","forecast","output","forecastday","document","write","JSON","stringify","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uQAIe,EACE,WACb,OAAOA,IAAMC,IAAI,mGCsBNC,E,4MArBXC,gBAAkB,WACdC,IACKC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,KAAKC,UAErB,IAAIC,EAASL,EAAIG,KAAKC,SAASE,YAAY,GAC3CC,SAASC,MAAMC,KAAKC,UAAUL,Q,kEARtCM,KAAKd,oB,+BAcb,OAEC,kD,GAlBkBe,aCQJC,EARH,WACV,OAEE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAM1BX,M","file":"static/js/main.39cf5834.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\r\n\r\nexport default {\r\n  getSampleData: function() {\r\n    return axios.get(\"http://api.weatherapi.com/v1/forecast.json?key=b954a8a0fe044aa4b25173138202411&q=London&days=3\")\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\"\r\n\r\nclass Main extends Component {\r\n    componentDidMount() {\r\n        this.loadDefaultData();\r\n      }\r\n    loadDefaultData = () =>{\r\n        API.getSampleData()\r\n            .then(res=>{\r\n                console.log(res.data.forecast)\r\n                //let output = res.data.forecast.forecastday[1].day.maxtemp_f; \r\n                let output = res.data.forecast.forecastday[1]; \r\n                document.write(JSON.stringify(output));\r\n                   \r\n            }\r\n              )\r\n    };\r\nrender (){\r\nreturn(\r\n\r\n <div>Loading ...\r\n </div>\r\n  \r\n);\r\n\r\n}\r\n}\r\nexport default Main;","import './App.css';\nimport Main from './pages/Main';\n\nconst App = () => {\n  return (\n\n    <Main />\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}